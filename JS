// Código JavaScript
let events = [];
let arr = []; // Array para almacenar los eventos

// Selección de elementos del DOM
const eventName = document.querySelector('#eventName');
const eventDate = document.querySelector('#eventDate');
const buttonAdd = document.querySelector('#bAdd');
const eventsContainer = document.querySelector('#eventsContainer');

// Cargar eventos almacenados en localStorage
const json = load();
try {
    arr = JSON.parse(json);
} catch (error) {
    arr = [];
}
events = arr ? [...arr] : [];

// Renderizar eventos al cargar la página
renderEvents();

// Agregar evento al formulario
buttonAdd.addEventListener("click", e => {
  e.preventDefault();
  addEvent();
});

document.querySelector("form").addEventListener("submit", e => {
  e.preventDefault();
  addEvent();
});

// Función para añadir un nuevo evento
function addEvent() {
  if(eventName.value === "" || eventDate.value === "") {
      return; // No agregar si algún campo está vacío
  }

  if(dateDiff(eventDate.value) < 0) {
    return; // No agregar si la fecha es anterior a hoy
  }

  const newEvent = {
    id: (Math.random() * 100).toString(36).slice(3), // Generar un ID único
    name: eventName.value,
    date: eventDate.value
  };

  events.unshift(newEvent); // Agregar evento al inicio del array

  save(JSON.stringify(events)); // Guardar en localStorage

  eventName.value = "";

  renderEvents(); // Volver a renderizar la lista de eventos
}

// Función para calcular la diferencia de días entre hoy y la fecha del evento
function dateDiff(d) {
  const targetDate = new Date(d);
  const today = new Date();
  const difference = targetDate.getTime() - today.getTime();
  const days = Math.ceil(difference / (1000 * 3600 * 24));
  return days;
}

// Función para mostrar los eventos en la pantalla
function renderEvents() {
  const eventsHTML = events.map(event => {
    return `
        <div class="event">
            <div class="days">
                <span class="days-number">${dateDiff(event.date)}</span>
                <span class="days-text">días</span>
            </div>
            <div class="event-name">${event.name}</div>
            <div class="event-date">${event.date}</div>
            <div class="actions">
                <button class="bDelete" data-id="${event.id}">Eliminar</button>
            </div>
        </div>
    `;
  });
  eventsContainer.innerHTML = eventsHTML.join("");
  
  // Agregar evento a los botones de eliminar
  document.querySelectorAll('.bDelete').forEach(button => {
      button.addEventListener('click', e => {
          const id = button.getAttribute('data-id');
          events = events.filter(event => event.id != id);

          save(JSON.stringify(events)); // Guardar cambios en localStorage

          renderEvents();
      });
  });
}

// Función para guardar eventos en localStorage
function save(data) {
  localStorage.setItem('items', data);
}

// Función para cargar eventos desde localStorage
function load() {
  return localStorage.getItem('items');
}
